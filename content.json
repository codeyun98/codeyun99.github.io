{"meta":{"title":"hexo个人博客","subtitle":"","description":"嘿，朋友，人生苦短，要开心啊","author":"hexo个人博客","url":"http://example.com","root":"/"},"pages":[{"title":"关于","date":"2021-07-27T02:17:52.000Z","updated":"2022-05-26T08:11:27.374Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"人生苦短，要开心啊！"},{"title":"分类","date":"2021-08-17T05:54:45.000Z","updated":"2022-05-26T08:11:57.553Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"img","date":"2021-07-27T03:20:37.000Z","updated":"2021-07-27T03:20:37.815Z","comments":true,"path":"img/index.html","permalink":"http://example.com/img/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-07-27T02:17:37.000Z","updated":"2022-05-26T08:05:04.635Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"JDBC连接数据库","slug":"JDBC连接数据库","date":"2022-03-17T06:58:41.000Z","updated":"2022-03-18T08:17:43.197Z","comments":true,"path":"2022/03/17/JDBC连接数据库/","link":"","permalink":"http://example.com/2022/03/17/JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/","excerpt":"jdbc连接数据库的步骤：1.注册驱动2.取数据库连接3.创建数据库操作对象Statement或PreparedStatement4.执行sql语句 executeUpdate处理增删改的操作，executeQuery处理查询操作5.处理查询结果集，只有查询才有此步6.关闭连接，释放资源","text":"jdbc连接数据库的步骤：1.注册驱动2.取数据库连接3.创建数据库操作对象Statement或PreparedStatement4.执行sql语句 executeUpdate处理增删改的操作，executeQuery处理查询操作5.处理查询结果集，只有查询才有此步6.关闭连接，释放资源 import java.sql.*; &#x2F;&#x2F;import java.util.*; class jdbcTest&#123; public static void main(String[] args)&#123; String driver &#x3D; &quot;oracle.jdbc.driver.OracleDriver&quot;; &#x2F;&#x2F;Oracle数据库驱动 String url &#x3D; &quot;jdbc:oracle:thin:@localhost:1521&#x2F;orcl&quot;;&#x2F;&#x2F;Oracle数据库地址 String user &#x3D; &quot;scott&quot;;&#x2F;&#x2F;数据库用户 String pwd &#x3D; &quot;orcl&quot;;&#x2F;&#x2F;数据库密码 String sql &#x3D; &quot;select * from dept where deptno between ? and ? order by deptno asc&quot;; Connection conn &#x3D; null; PreparedStatement ps &#x3D; null; ResultSet rs &#x3D; null; try&#123; Class.forName(driver); &#x2F;&#x2F;注册驱动，注册驱动时会抛出ClassNotFoundException异常 conn &#x3D; DriverManager.getConnection(url,user,pwd);&#x2F;&#x2F;获取数据库连接信息 ps &#x3D; conn.prepareStatement(sql);&#x2F;&#x2F;创建预编译数据库操作对象 ps.setInt(1,40);&#x2F;&#x2F;为第一个占位符？赋值 ps.setInt(2,60);&#x2F;&#x2F;为第二个占位符？赋值 rs &#x3D; ps.executeQuery();&#x2F;&#x2F;执行查询，获取查询结果集 &#x2F;&#x2F;处理查询结果集，循环遍历 while(rs.next())&#123; System.out.println(rs.getInt(&quot;deptno&quot;)+&quot;|&quot;+rs.getString(&quot;dname&quot;)+&quot;|&quot;+rs.getString(&quot;loc&quot;)); &#125; &#125;catch(Exception e)&#123; e.printStackTrace(); &#125;finally&#123; try&#123; if(rs!&#x3D;null)&#123; rs.close(); &#125; if(ps!&#x3D;null)&#123; ps.close(); &#125; if(conn!&#x3D;null)&#123; conn.close(); &#125; &#125;catch(Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125; &#125;","categories":[{"name":"jdbc","slug":"jdbc","permalink":"http://example.com/categories/jdbc/"}],"tags":[{"name":"jdbc连接数据库","slug":"jdbc连接数据库","permalink":"http://example.com/tags/jdbc%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"Maven换源","slug":"Maven换源","date":"2022-01-10T07:48:20.000Z","updated":"2022-01-10T07:53:48.951Z","comments":true,"path":"2022/01/10/Maven换源/","link":"","permalink":"http://example.com/2022/01/10/Maven%E6%8D%A2%E6%BA%90/","excerpt":"maven文件路径下找到setting.xml进行编辑修改：D:\\Software\\JavaTools\\apache-maven-3.6.1\\conf\\settings.xml","text":"maven文件路径下找到setting.xml进行编辑修改：D:\\Software\\JavaTools\\apache-maven-3.6.1\\conf\\settings.xml &lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt; &lt;/mirror&gt; &lt;!-- 中央仓库1 --&gt; &lt;mirror&gt; &lt;id&gt;repo1&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://repo1.maven.org/maven2/&lt;/url&gt; &lt;/mirror&gt; &lt;!-- 中央仓库2 --&gt; &lt;mirror&gt; &lt;id&gt;repo2&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://repo2.maven.org/maven2/&lt;/url&gt; &lt;/mirror&gt;","categories":[{"name":"maven","slug":"maven","permalink":"http://example.com/categories/maven/"}],"tags":[{"name":"maven换阿里源","slug":"maven换阿里源","permalink":"http://example.com/tags/maven%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90/"}]},{"title":"MySQL基础","slug":"MySQL基础","date":"2021-12-23T02:30:39.000Z","updated":"2021-12-23T03:02:14.790Z","comments":true,"path":"2021/12/23/MySQL基础/","link":"","permalink":"http://example.com/2021/12/23/MySQL%E5%9F%BA%E7%A1%80/","excerpt":"","text":"MySQL基础表中字段的增、改、删除1. 新增字段alter table 表名 add 字段名 字段类型; 2. 修改字段2.1. 字段名称修改alter table 表名 change 旧字段名 新字段名 字段类型; 2.2. 字段类型修改alter table 表名 modify 字段名 新字段类型; 3. 删除字段alter table 表名 drop column 字段名;","categories":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/categories/SQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://example.com/tags/MySQL/"}]},{"title":"mybatis实现数据库增删改查","slug":"mybatis实现数据库增删改查","date":"2021-09-26T07:17:57.000Z","updated":"2022-05-26T14:27:07.258Z","comments":true,"path":"2021/09/26/mybatis实现数据库增删改查/","link":"","permalink":"http://example.com/2021/09/26/mybatis%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/","excerpt":"jar依赖&lt;!-- MySql驱动--&gt; &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;mysql&#x2F;mysql-connector-java --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt; &lt;version&gt;5.1.6&lt;&#x2F;version&gt; &lt;&#x2F;dependency&gt; &lt;!-- MyBatis --&gt; &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.mybatis&#x2F;mybatis --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt; &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt; &lt;version&gt;3.5.7&lt;&#x2F;version&gt; &lt;&#x2F;dependency&gt;","text":"jar依赖&lt;!-- MySql驱动--&gt; &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;mysql&#x2F;mysql-connector-java --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt; &lt;version&gt;5.1.6&lt;&#x2F;version&gt; &lt;&#x2F;dependency&gt; &lt;!-- MyBatis --&gt; &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.mybatis&#x2F;mybatis --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt; &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt; &lt;version&gt;3.5.7&lt;&#x2F;version&gt; &lt;&#x2F;dependency&gt; jdbc.propertiesjdbc.driver&#x3D;com.mysql.jdbc.Driver jdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis?useSSL&#x3D;true&amp;userUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8 jdbc.username&#x3D;root jdbc.pwd&#x3D;root mybatis-config.xml&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt; &lt;!DOCTYPE configuration PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt; &lt;!-- configuration核心配置文件 --&gt; &lt;configuration&gt; &lt;!-- 加载jdbc配置文件 --&gt; &lt;properties resource&#x3D;&quot;jdbc.properties&quot;&gt;&lt;&#x2F;properties&gt; &lt;TypeAliases&gt; &lt;package name&#x3D;&quot;com.myProject.mybatis.pojo&quot;&#x2F;&gt; &lt;&#x2F;TypeAliases&gt; &lt;environments default&#x3D;&quot;development&quot;&gt; &lt;environment id&#x3D;&quot;development&quot;&gt; &lt;transactionManager type&#x3D;&quot;JDBC&quot;&#x2F;&gt; &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt; &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;$&#123;jdbc.driver&#125;&quot;&#x2F;&gt; &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;$&#123;jdbc.url&#125;&quot;&#x2F;&gt; &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;$&#123;jdbc.username&#125;&quot;&#x2F;&gt; &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;$&#123;jdbc.pwd&#125;&quot;&#x2F;&gt; &lt;&#x2F;dataSource&gt; &lt;&#x2F;environment&gt; &lt;&#x2F;environments&gt; &lt;mappers&gt; &lt;!-- &lt;mapper resource&#x3D;&quot;mapper&#x2F;userdaomapper.xml&quot;&#x2F;&gt; --&gt; &lt;package name&#x3D;&quot;com&#x2F;myProject&#x2F;mybatis&#x2F;mapper&quot;&#x2F;&gt; &lt;&#x2F;mappers&gt; &lt;&#x2F;configuration&gt; mybatisUtils.javapublic class mybatisUtils &#123; private static SqlSessionFactory sqlSessionFactory; static &#123; try &#123; &#x2F;&#x2F;读取mybaits核心配置 InputStream inputStream &#x3D; Resources.getResourceAsStream(&quot;mybatis-config.xml&quot;); &#x2F;&#x2F;获取SqlSessionFactory对象 sqlSessionFactory &#x3D; new SqlSessionFactoryBuilder().build(inputStream); &#125; catch (IOException e) &#123; &#x2F;&#x2F; TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; public static SqlSession getSqlSession() &#123; return sqlSessionFactory.openSession(); &#125; &#125; pojo 类 Userpublic class User &#123; private int id; private String name; private String pwd; public User() &#123; super(); &#125; public User(int id, String name, String pwd) &#123; super(); this.id &#x3D; id; this.name &#x3D; name; this.pwd &#x3D; pwd; &#125; public int getId() &#123; return id; &#125; public void setId(int id) &#123; this.id &#x3D; id; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name &#x3D; name; &#125; public String getPwd() &#123; return pwd; &#125; public void setPwd(String pwd) &#123; this.pwd &#x3D; pwd; &#125; @Override public String toString() &#123; return &quot;User [id&#x3D;&quot; + id + &quot;, name&#x3D;&quot; + name + &quot;, pwd&#x3D;&quot; + pwd + &quot;]&quot;; &#125; &#125; userMapper interfacepublic interface UserMapper &#123; List&lt;User&gt; getUserList(); User getOneUser(int id); int setUser(User user); int updateUser(User user); int delUser(int id); &#125; userMapper.xml&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt; &lt;!DOCTYPE mapper PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt; &lt;!-- namespace指定mapper接口 --&gt; &lt;mapper namespace&#x3D;&quot;com.myProject.mybatis.mapper&quot;&gt; &lt;select id&#x3D;&quot;getUserList&quot; resultType&#x3D;&quot;User&quot;&gt; select * from user &lt;&#x2F;select&gt; &lt;select id&#x3D;&quot;getOneUser&quot; resultType&#x3D;&quot;User&quot; parameterType&#x3D;&quot;User&quot;&gt; select * from user where id&#x3D;#&#123;user.id&#125; &lt;&#x2F;select&gt; &lt;insert id&#x3D;&quot;setUser&quot; parameterType&#x3D;&quot;User&quot;&gt; insert into user(id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;); &lt;&#x2F;insert&gt; &lt;update id&#x3D;&quot;updateUser&quot; parameterType&#x3D;&quot;User&quot;&gt; update user set pwd &#x3D; #&#123;pwd&#125; where id &#x3D; #&#123;id&#125; &lt;&#x2F;update&gt; &lt;delete id&#x3D;&quot;delUser&quot; parameterType&#x3D;&quot;int&quot;&gt; delete from user where id &#x3D; #&#123;id&#125; &lt;&#x2F;delete&gt; &lt;&#x2F;mapper&gt; test类@Test public void test() &#123; &#x2F;&#x2F;获取sqlSession对象 SqlSession sqlSession &#x3D; MyBatisUtils.getSqlSession(); userMapper userMapper &#x3D; sqlSession.getMapper(UserMapper.class); &#x2F;*List&lt;User&gt; userList &#x3D; userDao.getUserList(); &#x2F;&#x2F;for (User user : userList) &#123; &#x2F;&#x2F;System.out.println(user.getId()+&quot;&#x2F;&quot;+user.getName()+&quot;&#x2F;&quot;+user.getPwd()); &#x2F;&#x2F;&#125; userList.forEach(user-&gt;System.out.println(user)); System.out.println(userDao.getOneUser(1));*&#x2F; &#x2F;*userDao.setUser(new User(4,&quot;CS&quot;,&quot;1234&quot;)); sqlSession.commit();*&#x2F; &#x2F;*userDao.updateUser(new User(4,&quot;CS&quot;,&quot;123456&quot;));*&#x2F; userDao.delUser(4); sqlSession.commit(); sqlSession.close(); &#125;","categories":[{"name":"java","slug":"java","permalink":"http://example.com/categories/java/"}],"tags":[{"name":"ssm/mybatis","slug":"ssm-mybatis","permalink":"http://example.com/tags/ssm-mybatis/"}]},{"title":"Oracle游标扩容","slug":"Oracle游标扩容","date":"2021-09-14T01:25:55.000Z","updated":"2021-09-14T01:53:07.245Z","comments":true,"path":"2021/09/14/Oracle游标扩容/","link":"","permalink":"http://example.com/2021/09/14/Oracle%E6%B8%B8%E6%A0%87%E6%89%A9%E5%AE%B9/","excerpt":"查看当前游标show parameter open_cursors; 修改alter system set open_cursors&#x3D;1000; 提交commit","text":"查看当前游标show parameter open_cursors; 修改alter system set open_cursors&#x3D;1000; 提交commit","categories":[{"name":"oracle","slug":"oracle","permalink":"http://example.com/categories/oracle/"}],"tags":[{"name":"游标","slug":"游标","permalink":"http://example.com/tags/%E6%B8%B8%E6%A0%87/"}]},{"title":"Oracle基础（一）","slug":"Oracle基础（一）","date":"2021-09-13T01:44:35.000Z","updated":"2021-11-25T09:22:42.835Z","comments":true,"path":"2021/09/13/Oracle基础（一）/","link":"","permalink":"http://example.com/2021/09/13/Oracle%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"用户操作1. 解锁用户alter user 用户名 account unlock; 2. 锁定用户alter user 用户名 account lock; 3. 用户密码修改alter user 用户名 identified by 密码 ; 4. 用户默认修改表空间alter user 用户名 default tablspace 表空间名称 ;","text":"用户操作1. 解锁用户alter user 用户名 account unlock; 2. 锁定用户alter user 用户名 account lock; 3. 用户密码修改alter user 用户名 identified by 密码 ; 4. 用户默认修改表空间alter user 用户名 default tablspace 表空间名称 ; 表空间操作1. 表空间状态修改1.1 联机状态 onlinealter tablespace 表空间名称 online; 1.2 脱机状态 offlinealter tablespace 表空间名称 offline; 2. 表空间读写属性设置 （默认属性是 online ，表示可读写）2.1 只读 read onlyalter tablespace 表空间名称 read only; 2.2 读写 read writealter tablespace 表空间名称 read write; 3. 表空间状态查询alter tablespace_name &#39;表空间名称&#39;,status &#39;表空间状态&#39; from dba_tablespaces where tablespacename&#x3D;&#39;表空间名称&#39;; 4. 删除表空间4.1 删除空表空间drop tablespace 表空间名称; 4.2 删除非空表空间drop tablespace 表空间名称 including contents; 4.3 删除非空表空间及物理文件drop tablespace 表空间名称 including contents and datafiles; 数据表操作1. 修改表中字段类型alter table 表名 modify 字段名 字段类型; 2. 修改表中字段名称alter table 表名 rename column 原字段名 to 新字段名; 3. 表中添加新的字段alter table 表名 add 字段名 字段类型; 4. 删除表中字段alter table 表名 drop column 字段名; 5. 截断表 （清除表中数据）truncate table 表名; 6. 删除表drop table 表名; 7. 有条件的删除表中数据delete from 表名 where 字段名&#x3D;字段值; 8. 复制表8.1 创建表时复制另一张表中的数据create table 表名 as select 字段1,...,字段n from 被复制的表名; 8.2 将另一张表的数据插入到表中insert into 表名 (字段1,...,字段n) select 字段1,...,字段n from 被复制的表名; 9. 常用约束9.1 主键约束 primary key9.1.1 建表时添加主键字段名 字段类型 primary key; 9.1.2 表追加主键alter table 表名 add primary key(字段名); 9.2 联合主键 constraint… … primary key9.2.1 建表时添加联合主键constraint 主键名称 primary key(字段1,...,字段n) 9.2.2 追加联合主键alter table add constraint 主键名称 primary key(字段1,...字段n)","categories":[{"name":"Oracle","slug":"Oracle","permalink":"http://example.com/categories/Oracle/"}],"tags":[{"name":"Oracle 基础 用户操作 表空间操作","slug":"Oracle-基础-用户操作-表空间操作","permalink":"http://example.com/tags/Oracle-%E5%9F%BA%E7%A1%80-%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C-%E8%A1%A8%E7%A9%BA%E9%97%B4%E6%93%8D%E4%BD%9C/"}]},{"title":"Oracle常用函数","slug":"Oracle常用函数","date":"2021-09-13T01:43:02.000Z","updated":"2021-09-14T01:53:46.393Z","comments":true,"path":"2021/09/13/Oracle常用函数/","link":"","permalink":"http://example.com/2021/09/13/Oracle%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/","excerpt":"0x00 前言","text":"0x00 前言","categories":[{"name":"Oracle","slug":"Oracle","permalink":"http://example.com/categories/Oracle/"}],"tags":[{"name":"常用函数","slug":"常用函数","permalink":"http://example.com/tags/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"}]},{"title":"hexo博客搭建与简单个性化","slug":"hexo博客搭建与简单个性化","date":"2021-08-24T07:34:22.000Z","updated":"2021-11-25T06:51:11.247Z","comments":true,"path":"2021/08/24/hexo博客搭建与简单个性化/","link":"","permalink":"http://example.com/2021/08/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%AE%80%E5%8D%95%E4%B8%AA%E6%80%A7%E5%8C%96/","excerpt":"hexo博客的搭建和简单个性化，主要内容如下： hexo博客的安装 next主题应用与简单个性化 看板娘的简单配置","text":"hexo博客的搭建和简单个性化，主要内容如下： hexo博客的安装 next主题应用与简单个性化 看板娘的简单配置 前期准备下载安装 Node.js 和 Git ，安装之后在DOS命令窗口中使用node -version 、npm -version 、git –version 查看相应版本。 npm的下载速度较慢可以使用淘宝镜像源npm install -g cnpm --registry=https://registry.npm.taobao.org可以使用 cnpm -v 查看版本信息 hexo部署 hexo 安装安装hexo,使用cnpm一键安装cnpm install -g hexo-cli hexo初始化hexo init hexo 安装所需组件npm install 本地预览hexo g #生成静态页面 hexo s #启用预览 启动完成之后可以访问http://localhost:4000 预览hexo默认主页 部署到GitHub 创建GitHub 连接GitHub2.1 设置用户和邮箱git config --global user.name &quot;GitHub username&quot; git config --global user.email &quot;GitHub email&quot; 2.2 生成SSH密钥并复制ssh-keygen -t rsa -C &quot;GitHub email&quot; #生成SSH密钥 cat id_rsa.pub #查看并复制密钥，如果无法拷贝可以根据生成ssh时提示的路径找到“id_sra”以文本打开这个文件进行复制 2.3 添加密钥登录GitHub,找到一下路径Setting&gt;SSH and GPG keys&gt;New SSH Key,随便填写名字然后粘贴密钥保存即可。验证ssh -T git@github.com #successfully表示连接成功2.4 安装hexo-deployer-gitnpm install hexo-deployer-git --save2.5 设置_congfig在hexo的根目录中找到_congfig.yml,编辑以下内容deploy: type: git repo: git@github.com:用户名&#x2F;用户名.github.io.git branch: master 2.5 验证hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 在浏览器输入GitHub域名：用户名.github.io.git地址进行验证","categories":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/categories/hexo/"}],"tags":[{"name":"hexo博客搭建与简单个性化","slug":"hexo博客搭建与简单个性化","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%AE%80%E5%8D%95%E4%B8%AA%E6%80%A7%E5%8C%96/"}]},{"title":"Oracle数据泵导入导出数据","slug":"Oracle数据泵导入导出数据","date":"2021-08-23T05:43:41.000Z","updated":"2022-03-08T02:52:26.818Z","comments":true,"path":"2021/08/23/Oracle数据泵导入导出数据/","link":"","permalink":"http://example.com/2021/08/23/Oracle%E6%95%B0%E6%8D%AE%E6%B3%B5%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE/","excerpt":"创建目录 create directory 目录名称 as &#39;目录路径&#39; 授权 grant read,write on directory 目录名 to 用户名;","text":"创建目录 create directory 目录名称 as &#39;目录路径&#39; 授权 grant read,write on directory 目录名 to 用户名; expdp导出 expdp username&#x2F;pwd dumpfile &#x3D; user%u.dmp directory&#x3D;目录名 logfile &#x3D; user_expdp%u.log job_name &#x3D; exp_username; impdp导入 impdp username&#x2F;pwd dumpfile &#x3D; user%u.dmp directory &#x3D; 目录名 remap_schema &#x3D; username:username logfile &#x3D; user_impdp%u.log job_name &#x3D; imp_username;","categories":[{"name":"oracle","slug":"oracle","permalink":"http://example.com/categories/oracle/"}],"tags":[{"name":"expdp/impdp","slug":"expdp-impdp","permalink":"http://example.com/tags/expdp-impdp/"}]}],"categories":[{"name":"jdbc","slug":"jdbc","permalink":"http://example.com/categories/jdbc/"},{"name":"maven","slug":"maven","permalink":"http://example.com/categories/maven/"},{"name":"SQL","slug":"SQL","permalink":"http://example.com/categories/SQL/"},{"name":"java","slug":"java","permalink":"http://example.com/categories/java/"},{"name":"oracle","slug":"oracle","permalink":"http://example.com/categories/oracle/"},{"name":"Oracle","slug":"Oracle","permalink":"http://example.com/categories/Oracle/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/categories/hexo/"}],"tags":[{"name":"jdbc连接数据库","slug":"jdbc连接数据库","permalink":"http://example.com/tags/jdbc%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"maven换阿里源","slug":"maven换阿里源","permalink":"http://example.com/tags/maven%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90/"},{"name":"MySQL","slug":"MySQL","permalink":"http://example.com/tags/MySQL/"},{"name":"ssm/mybatis","slug":"ssm-mybatis","permalink":"http://example.com/tags/ssm-mybatis/"},{"name":"游标","slug":"游标","permalink":"http://example.com/tags/%E6%B8%B8%E6%A0%87/"},{"name":"Oracle 基础 用户操作 表空间操作","slug":"Oracle-基础-用户操作-表空间操作","permalink":"http://example.com/tags/Oracle-%E5%9F%BA%E7%A1%80-%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C-%E8%A1%A8%E7%A9%BA%E9%97%B4%E6%93%8D%E4%BD%9C/"},{"name":"常用函数","slug":"常用函数","permalink":"http://example.com/tags/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"},{"name":"hexo博客搭建与简单个性化","slug":"hexo博客搭建与简单个性化","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%AE%80%E5%8D%95%E4%B8%AA%E6%80%A7%E5%8C%96/"},{"name":"expdp/impdp","slug":"expdp-impdp","permalink":"http://example.com/tags/expdp-impdp/"}]}